apiVersion: v1
kind: ServiceAccount
metadata:
  name: clouddk-cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:clouddk-cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: clouddk-cloud-controller-manager
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: clouddk-cloud-controller-manager
  name: clouddk-cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: clouddk-cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: clouddk-cloud-controller-manager
    spec:
      serviceAccountName: clouddk-cloud-controller-manager
      containers:
      - name: clouddk-cloud-controller-manager
        image: docker.io/danitso/clouddk-cloud-controller-manager:latest
        args:
        - --cloud-provider=clouddk
        - --leader-elect=true
        - --use-service-account-credentials
        - --allocate-node-cidrs=true
        - --configure-cloud-routes=false
        - --cluster-cidr=10.32.0.0/12
        envFrom:
        - secretRef:
            name: clouddk-cloud-controller-manager-config
      hostNetwork: true
      tolerations:
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
        operator: "Equal"
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
        operator: "Exists"
      - key: node.kubernetes.io/not-ready
        effect: NoSchedule
        operator: "Exists"
      nodeSelector:
        node-role.kubernetes.io/master: ""
